/*
 * This code is generated by blanco Framework.
 */
package my.db.exception;

import java.sql.SQLException;

/**
 * データベース制約違反に関する例外クラス <br>
 * このクラスはblancoDbが生成したソースコードで利用されます <br>
 * ※このクラスは、ソースコード自動生成後のファイルとして利用されます。
 * @since 2005.05.12
 * @author blanco Framework
 */
public class IntegrityConstraintException extends SQLException {
    /**
     * このクラスを表現するSQLStateコード。
     */
    protected static final String SQLSTATE_INTEGRITYCONSTRAINT = "23000";

    /**
     * 制約違反が発生したことを示す例外オブジェクト のインスタンスを作成します。
     *
     * @deprecated このコンストラクタはなるべく利用せずに、もとの例外のSQLStateやvenderCodeを利用可能な別のコンストラクタを利用してください。
     */
    public IntegrityConstraintException() {
        super("Integrity consrtraint exception has occured.", SQLSTATE_INTEGRITYCONSTRAINT);
    }

    /**
     * 制約違反が発生したことを示す例外オブジェクト のインスタンスを作成します。
     *
     * @deprecated このコンストラクタはなるべく利用せずに、もとの例外のSQLStateやvenderCodeを利用可能な別のコンストラクタを利用してください。
     *
     * @param reason 例外の説明
     */
    public IntegrityConstraintException(final String reason) {
        super(reason, SQLSTATE_INTEGRITYCONSTRAINT);
    }

    /**
     * 制約違反が発生したことを示す例外オブジェクト のインスタンスを作成します。
     *
     * @deprecated このコンストラクタはなるべく利用せずに、もとの例外のSQLStateやvenderCodeを利用可能な別のコンストラクタを利用してください。
     *
     * @param reason 例外の説明
     * @param SQLState 例外を識別する XOPENコードまたは SQL 99のコード
     */
    public IntegrityConstraintException(final String reason, final String SQLState) {
        super(reason, SQLState);
    }

    /**
     * 制約違反が発生したことを示す例外オブジェクト のインスタンスを作成します。
     *
     * @param reason 例外の説明
     * @param SQLState 例外を識別する XOPENコードまたは SQL 99のコード
     * @param vendorCode データベースベンダーが定める固有の例外コード
     */
    public IntegrityConstraintException(final String reason, final String SQLState, final int vendorCode) {
        super(reason, SQLState, vendorCode);
    }
}
